[{"/Users/parz_ion/Desktop/code/React/my-new-todo/src/index.js":"1","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/App/index.js":"2","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/App/App.jsx":"3","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Footer/index.js":"4","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskList/index.js":"5","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/NewTaskForm/index.js":"6","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Footer/Footer.jsx":"7","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskList/TaskList.jsx":"8","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/NewTaskForm/NewTaskForm.jsx":"9","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Task/index.js":"10","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskFilter/index.js":"11","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Task/Task.jsx":"12","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskFilter/TaskFilter.jsx":"13"},{"size":263,"mtime":1677923747315,"results":"14","hashOfConfig":"15"},{"size":46,"mtime":1677923747310,"results":"16","hashOfConfig":"15"},{"size":5569,"mtime":1678188979519,"results":"17","hashOfConfig":"15"},{"size":55,"mtime":1677923747311,"results":"18","hashOfConfig":"15"},{"size":61,"mtime":1677923747314,"results":"19","hashOfConfig":"15"},{"size":70,"mtime":1677923747312,"results":"20","hashOfConfig":"15"},{"size":1262,"mtime":1677923747310,"results":"21","hashOfConfig":"15"},{"size":1143,"mtime":1678187988999,"results":"22","hashOfConfig":"15"},{"size":1763,"mtime":1678186151534,"results":"23","hashOfConfig":"15"},{"size":49,"mtime":1677923747313,"results":"24","hashOfConfig":"15"},{"size":67,"mtime":1677923747313,"results":"25","hashOfConfig":"15"},{"size":3383,"mtime":1678189085834,"results":"26","hashOfConfig":"15"},{"size":347,"mtime":1677923747313,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x5nz7v",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/parz_ion/Desktop/code/React/my-new-todo/src/index.js",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/App/index.js",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/App/App.jsx",["68"],[],"import TaskList from '../TaskList';\nimport Footer from '../Footer';\nimport NewTaskForm from '../NewTaskForm';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport React, { useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction toggleProperty(arr, id, propName) {\n  const idx = arr.findIndex((el) => el.id === id);\n\n  const oldItem = arr[idx];\n  let comp;\n  let cond = 'view';\n\n  if (oldItem.condition === 'view' && oldItem.completed === false) cond = 'editing';\n\n  if (oldItem.condition === 'completed' && oldItem.completed === true && propName === 'editing') {\n    cond = 'editing';\n    comp = true;\n  }\n\n  if (\n    (oldItem.condition === 'view' && oldItem.completed === false && propName === 'completed') ||\n    (oldItem.condition === 'editing' && oldItem.completed === true)\n  ) {\n    cond = 'completed';\n    comp = true;\n  }\n\n  const newItem = {\n    ...oldItem,\n    condition: cond,\n    completed: comp || false,\n  };\n\n  return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n}\n\nfunction taskVisibilityСondition(array, parameter, todoData) {\n  return array.map((item, index) => {\n    const itemObj = { ...todoData[index] };\n    itemObj.visibility = null;\n\n    if (itemObj.condition === parameter) {\n      itemObj.visibility = 'hidden';\n    }\n    return itemObj;\n  });\n}\n\nfunction App() {\n  const [todoData, setTodoData] = useState([]);\n\n  const toggleStateTimer = (id, value) => {\n    setTodoData((prev) => {\n      const idx = prev.findIndex((el) => el.id === id);\n\n      const itemObj = { ...prev[idx] };\n\n      itemObj.timerOn = value;\n\n      const newArray = [...prev.slice(0, idx), itemObj, ...prev.slice(idx + 1)];\n\n      return newArray;\n    });\n  };\n\n  const hiddenTask = (parameter) => {\n    let newArray = todoData.map((item, index) => {\n      const itemObj = { ...todoData[index] };\n      itemObj.visibility = null;\n      return itemObj;\n    });\n\n    if (parameter === 'Active') {\n      newArray = taskVisibilityСondition(newArray, 'completed', todoData);\n    } else if (parameter === 'Completed') {\n      newArray = taskVisibilityСondition(newArray, 'view', todoData);\n    }\n\n    setTodoData(newArray);\n  };\n\n  const onCompletedTask = (id) => {\n    hiddenTask('All');\n\n    toggleStateTimer(id, false);\n    setTodoData((prev) => {\n      const newArray = toggleProperty(prev, id, 'completed');\n\n      return newArray;\n    });\n  };\n\n  const onEditingTask = (id) => {\n    setTodoData((prev) => {\n      const newArray = toggleProperty(prev, id, 'editing');\n\n      return newArray;\n    });\n  };\n\n  const editingTask = (id, text) => {\n    setTodoData((prev) => {\n      const idx = prev.findIndex((el) => el.id === id);\n\n      const oldItem = prev[idx];\n      oldItem.label = text;\n\n      const newArray = [...prev.slice(0, idx), oldItem, ...prev.slice(idx + 1)];\n\n      return newArray;\n    });\n\n    onEditingTask(id);\n  };\n\n  const deleteTask = (id) => {\n    toggleStateTimer(id, false);\n    setTodoData((prev) => {\n      const newArray = prev.filter((el) => el.id !== id);\n      return newArray;\n    });\n  };\n\n  const updateTimeCreate = () => {\n    setInterval(() => {\n      setTodoData((prev) => {\n        const newArray = prev.map((item, index) => {\n          const itemObj = { ...prev[index] };\n\n          itemObj.timeInterval = formatDistanceToNow(itemObj.timeCreate, {\n            includeSeconds: true,\n            addSuffix: true,\n          });\n          return itemObj;\n        });\n\n        return newArray;\n      });\n    }, 5000);\n  };\n\n  const createTodoItem = (label, timerTime) => ({\n    label,\n    timerTime,\n    timerOn: true,\n    condition: 'view',\n    visibility: null,\n    completed: false,\n    id: uuidv4(),\n    timeCreate: Date.now(),\n    timeInterval: updateTimeCreate(),\n  });\n\n  const updateTimerTime = (id) => {\n    const timer = setInterval(() => {\n      setTodoData((prev) => {\n        const idx = prev.findIndex((el) => el.id === id);\n\n        const itemObj = { ...prev[idx] };\n        if (itemObj.timerTime) {\n          itemObj.timerTime -= 1;\n\n          const newArray = [...prev.slice(0, idx), itemObj, ...prev.slice(idx + 1)];\n          if (!itemObj.timerOn) {\n            clearInterval(timer);\n          }\n          return newArray;\n        }\n        clearInterval(timer);\n        return prev;\n      });\n    }, 1000);\n  };\n\n  const addItem = (text, timerTime) => {\n    hiddenTask('All');\n\n    const newItem = createTodoItem(text, timerTime);\n    setTodoData((prev) => [...prev, newItem]);\n    updateTimerTime(newItem.id);\n  };\n\n  const clearCompletedTasks = () => {\n    todoData.forEach((el) => {\n      if (el.condition === 'completed') {\n        deleteTask(el.id);\n      }\n    });\n  };\n\n  const stopTimer = (id) => {\n    toggleStateTimer(id, false);\n  };\n\n  const startTimer = (id) => {\n    console.log('true');\n    toggleStateTimer(id, true);\n    updateTimerTime(id);\n  };\n\n  const countTasks = todoData.length - todoData.filter((el) => el.completed === true).length;\n  return (\n    <section className=\"main\">\n      <header className=\"header\" id=\"header\">\n        <h1>todos on hooks</h1>\n        <NewTaskForm addItem={addItem} />\n      </header>\n      <TaskList\n        todo={todoData}\n        deletedTask={deleteTask}\n        addItem={addItem}\n        onCompletedTask={onCompletedTask}\n        onEditingTask={onEditingTask}\n        editingTask={editingTask}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n      />\n      <Footer countTasks={countTasks} clearCompletedTasks={clearCompletedTasks} hiddenTask={hiddenTask} />\n    </section>\n  );\n}\n\nexport default App;\n","/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Footer/index.js",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskList/index.js",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/NewTaskForm/index.js",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Footer/Footer.jsx",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskList/TaskList.jsx",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/NewTaskForm/NewTaskForm.jsx",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Task/index.js",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskFilter/index.js",[],[],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Task/Task.jsx",[],["69"],"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/TaskFilter/TaskFilter.jsx",[],[],{"ruleId":"70","severity":1,"message":"71","line":199,"column":5,"nodeType":"72","messageId":"73","endLine":199,"endColumn":16},{"ruleId":"74","severity":2,"message":"75","line":95,"column":13,"nodeType":"76","endLine":95,"endColumn":22,"suppressions":"77"},"no-console","Unexpected console statement.","MemberExpression","unexpected","jsx-a11y/no-autofocus","The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","JSXAttribute",["78"],{"kind":"79","justification":"80"},"directive",""]