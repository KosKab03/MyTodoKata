{"ast":null,"code":"var _jsxFileName = \"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\nimport TaskList from '../TaskList';\nimport Footer from '../Footer';\nimport NewTaskForm from '../NewTaskForm';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction toggleProperty(arr, id, propName) {\n  const idx = arr.findIndex(el => el.id === id);\n  const oldItem = arr[idx];\n  let comp;\n  let cond = 'view';\n  if (oldItem.condition === 'view' && oldItem.completed === false) cond = 'editing';\n  if (oldItem.condition === 'completed' && oldItem.completed === true && propName === 'editing') {\n    cond = 'editing';\n    comp = true;\n  }\n  if (oldItem.condition === 'view' && oldItem.completed === false && propName === 'completed' || oldItem.condition === 'editing' && oldItem.completed === true) {\n    cond = 'completed';\n    comp = true;\n  }\n  const newItem = {\n    ...oldItem,\n    condition: cond,\n    completed: comp || false\n  };\n  return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n}\nfunction taskVisibilityСondition(array, parameter, todoData) {\n  return array.map((item, index) => {\n    const itemObj = {\n      ...todoData[index]\n    };\n    itemObj.visibility = null;\n    if (itemObj.condition === parameter) {\n      itemObj.visibility = 'hidden';\n    }\n    return itemObj;\n  });\n}\nfunction App() {\n  _s();\n  const [todoData, setTodoData] = useState([]);\n  const toggleStateTimer = (id, value) => {\n    setTodoData(prev => {\n      const idx = prev.findIndex(el => el.id === id);\n      const itemObj = {\n        ...prev[idx]\n      };\n      itemObj.timerOn = value;\n      const newArray = [...prev.slice(0, idx), itemObj, ...prev.slice(idx + 1)];\n      return newArray;\n    });\n  };\n  const hiddenTask = parameter => {\n    let newArray = todoData.map((item, index) => {\n      const itemObj = {\n        ...todoData[index]\n      };\n      itemObj.visibility = null;\n      return itemObj;\n    });\n    if (parameter === 'Active') {\n      newArray = taskVisibilityСondition(newArray, 'completed', todoData);\n    } else if (parameter === 'Completed') {\n      newArray = taskVisibilityСondition(newArray, 'view', todoData);\n    }\n    setTodoData(newArray);\n  };\n  const onCompletedTask = id => {\n    hiddenTask('All');\n    toggleStateTimer(id, false);\n    setTodoData(prev => {\n      const newArray = toggleProperty(prev, id, 'completed');\n      return newArray;\n    });\n  };\n  const onEditingTask = id => {\n    setTodoData(prev => {\n      const newArray = toggleProperty(prev, id, 'editing');\n      return newArray;\n    });\n  };\n  const editingTask = (id, text) => {\n    setTodoData(prev => {\n      const idx = prev.findIndex(el => el.id === id);\n      const oldItem = prev[idx];\n      oldItem.label = text;\n      const newArray = [...prev.slice(0, idx), oldItem, ...prev.slice(idx + 1)];\n      return newArray;\n    });\n    onEditingTask(id);\n  };\n  const deleteTask = id => {\n    toggleStateTimer(id, false);\n    setTodoData(prev => {\n      const newArray = prev.filter(el => el.id !== id);\n      return newArray;\n    });\n  };\n  const updateTimeCreate = () => {\n    setInterval(() => {\n      setTodoData(prev => {\n        const newArray = prev.map((item, index) => {\n          const itemObj = {\n            ...prev[index]\n          };\n          itemObj.timeInterval = formatDistanceToNow(itemObj.timeCreate, {\n            includeSeconds: true,\n            addSuffix: true\n          });\n          return itemObj;\n        });\n        return newArray;\n      });\n    }, 5000);\n  };\n  const createTodoItem = (label, timerTime) => ({\n    label,\n    timerTime,\n    timerOn: true,\n    condition: 'view',\n    visibility: null,\n    completed: false,\n    id: uuidv4(),\n    timeCreate: Date.now(),\n    timeInterval: updateTimeCreate()\n  });\n  const updateTimerTime = id => {\n    const timer = setInterval(() => {\n      setTodoData(prev => {\n        const idx = prev.findIndex(el => el.id === id);\n        const itemObj = {\n          ...prev[idx]\n        };\n        if (itemObj.timerTime) {\n          itemObj.timerTime -= 1;\n          const newArray = [...prev.slice(0, idx), itemObj, ...prev.slice(idx + 1)];\n          if (!itemObj.timerOn) {\n            clearInterval(timer);\n          }\n          return newArray;\n        }\n        clearInterval(timer);\n        return prev;\n      });\n    }, 1000);\n  };\n  const addItem = (text, timerTime) => {\n    hiddenTask('All');\n    const newItem = createTodoItem(text, timerTime);\n    setTodoData(prev => [...prev, newItem]);\n    updateTimerTime(newItem.id);\n  };\n  const clearCompletedTasks = () => {\n    todoData.forEach(el => {\n      if (el.condition === 'completed') {\n        deleteTask(el.id);\n      }\n    });\n  };\n  const stopTimer = id => {\n    toggleStateTimer(id, false);\n  };\n  const startTimer = id => {\n    toggleStateTimer(id, true);\n    updateTimerTime(id);\n  };\n  const countTasks = todoData.length - todoData.filter(el => el.completed === true).length;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      id: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos on hooks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewTaskForm, {\n        addItem: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      todo: todoData,\n      deletedTask: deleteTask,\n      addItem: addItem,\n      onCompletedTask: onCompletedTask,\n      onEditingTask: onEditingTask,\n      editingTask: editingTask,\n      stopTimer: stopTimer,\n      startTimer: startTimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      countTasks: countTasks,\n      clearCompletedTasks: clearCompletedTasks,\n      hiddenTask: hiddenTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JNuYZlp5f9I8JiHhK2o7AQUkFwY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TaskList","Footer","NewTaskForm","formatDistanceToNow","React","useState","v4","uuidv4","jsxDEV","_jsxDEV","toggleProperty","arr","id","propName","idx","findIndex","el","oldItem","comp","cond","condition","completed","newItem","slice","taskVisibilityСondition","array","parameter","todoData","map","item","index","itemObj","visibility","App","_s","setTodoData","toggleStateTimer","value","prev","timerOn","newArray","hiddenTask","onCompletedTask","onEditingTask","editingTask","text","label","deleteTask","filter","updateTimeCreate","setInterval","timeInterval","timeCreate","includeSeconds","addSuffix","createTodoItem","timerTime","Date","now","updateTimerTime","timer","clearInterval","addItem","clearCompletedTasks","forEach","stopTimer","startTimer","countTasks","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","todo","deletedTask","_c","$RefreshReg$"],"sources":["/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/App/App.jsx"],"sourcesContent":["import TaskList from '../TaskList';\nimport Footer from '../Footer';\nimport NewTaskForm from '../NewTaskForm';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport React, { useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction toggleProperty(arr, id, propName) {\n  const idx = arr.findIndex((el) => el.id === id);\n\n  const oldItem = arr[idx];\n  let comp;\n  let cond = 'view';\n\n  if (oldItem.condition === 'view' && oldItem.completed === false) cond = 'editing';\n\n  if (oldItem.condition === 'completed' && oldItem.completed === true && propName === 'editing') {\n    cond = 'editing';\n    comp = true;\n  }\n\n  if (\n    (oldItem.condition === 'view' && oldItem.completed === false && propName === 'completed') ||\n    (oldItem.condition === 'editing' && oldItem.completed === true)\n  ) {\n    cond = 'completed';\n    comp = true;\n  }\n\n  const newItem = {\n    ...oldItem,\n    condition: cond,\n    completed: comp || false,\n  };\n\n  return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n}\n\nfunction taskVisibilityСondition(array, parameter, todoData) {\n  return array.map((item, index) => {\n    const itemObj = { ...todoData[index] };\n    itemObj.visibility = null;\n\n    if (itemObj.condition === parameter) {\n      itemObj.visibility = 'hidden';\n    }\n    return itemObj;\n  });\n}\n\nfunction App() {\n  const [todoData, setTodoData] = useState([]);\n\n  const toggleStateTimer = (id, value) => {\n    setTodoData((prev) => {\n      const idx = prev.findIndex((el) => el.id === id);\n\n      const itemObj = { ...prev[idx] };\n\n      itemObj.timerOn = value;\n\n      const newArray = [...prev.slice(0, idx), itemObj, ...prev.slice(idx + 1)];\n\n      return newArray;\n    });\n  };\n\n  const hiddenTask = (parameter) => {\n    let newArray = todoData.map((item, index) => {\n      const itemObj = { ...todoData[index] };\n      itemObj.visibility = null;\n      return itemObj;\n    });\n\n    if (parameter === 'Active') {\n      newArray = taskVisibilityСondition(newArray, 'completed', todoData);\n    } else if (parameter === 'Completed') {\n      newArray = taskVisibilityСondition(newArray, 'view', todoData);\n    }\n\n    setTodoData(newArray);\n  };\n\n  const onCompletedTask = (id) => {\n    hiddenTask('All');\n\n    toggleStateTimer(id, false);\n    setTodoData((prev) => {\n      const newArray = toggleProperty(prev, id, 'completed');\n\n      return newArray;\n    });\n  };\n\n  const onEditingTask = (id) => {\n    setTodoData((prev) => {\n      const newArray = toggleProperty(prev, id, 'editing');\n\n      return newArray;\n    });\n  };\n\n  const editingTask = (id, text) => {\n    setTodoData((prev) => {\n      const idx = prev.findIndex((el) => el.id === id);\n\n      const oldItem = prev[idx];\n      oldItem.label = text;\n\n      const newArray = [...prev.slice(0, idx), oldItem, ...prev.slice(idx + 1)];\n\n      return newArray;\n    });\n\n    onEditingTask(id);\n  };\n\n  const deleteTask = (id) => {\n    toggleStateTimer(id, false);\n    setTodoData((prev) => {\n      const newArray = prev.filter((el) => el.id !== id);\n      return newArray;\n    });\n  };\n\n  const updateTimeCreate = () => {\n    setInterval(() => {\n      setTodoData((prev) => {\n        const newArray = prev.map((item, index) => {\n          const itemObj = { ...prev[index] };\n\n          itemObj.timeInterval = formatDistanceToNow(itemObj.timeCreate, {\n            includeSeconds: true,\n            addSuffix: true,\n          });\n          return itemObj;\n        });\n\n        return newArray;\n      });\n    }, 5000);\n  };\n\n  const createTodoItem = (label, timerTime) => ({\n    label,\n    timerTime,\n    timerOn: true,\n    condition: 'view',\n    visibility: null,\n    completed: false,\n    id: uuidv4(),\n    timeCreate: Date.now(),\n    timeInterval: updateTimeCreate(),\n  });\n\n  const updateTimerTime = (id) => {\n    const timer = setInterval(() => {\n      setTodoData((prev) => {\n        const idx = prev.findIndex((el) => el.id === id);\n\n        const itemObj = { ...prev[idx] };\n        if (itemObj.timerTime) {\n          itemObj.timerTime -= 1;\n\n          const newArray = [...prev.slice(0, idx), itemObj, ...prev.slice(idx + 1)];\n\n          if (!itemObj.timerOn) {\n            clearInterval(timer);\n          }\n          return newArray;\n        }\n        clearInterval(timer);\n        return prev;\n      });\n    }, 1000);\n  };\n\n  const addItem = (text, timerTime) => {\n    hiddenTask('All');\n\n    const newItem = createTodoItem(text, timerTime);\n    setTodoData((prev) => [...prev, newItem]);\n    updateTimerTime(newItem.id);\n  };\n\n  const clearCompletedTasks = () => {\n    todoData.forEach((el) => {\n      if (el.condition === 'completed') {\n        deleteTask(el.id);\n      }\n    });\n  };\n\n  const stopTimer = (id) => {\n    toggleStateTimer(id, false);\n  };\n\n  const startTimer = (id) => {\n    toggleStateTimer(id, true);\n    updateTimerTime(id);\n  };\n\n  const countTasks = todoData.length - todoData.filter((el) => el.completed === true).length;\n  return (\n    <section className=\"main\">\n      <header className=\"header\" id=\"header\">\n        <h1>todos on hooks</h1>\n        <NewTaskForm addItem={addItem} />\n      </header>\n      <TaskList\n        todo={todoData}\n        deletedTask={deleteTask}\n        addItem={addItem}\n        onCompletedTask={onCompletedTask}\n        onEditingTask={onEditingTask}\n        editingTask={editingTask}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n      />\n      <Footer countTasks={countTasks} clearCompletedTasks={clearCompletedTasks} hiddenTask={hiddenTask} />\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,aAAa;AAClC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,mBAAmB,MAAM,8BAA8B;AAC9D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,cAAcA,CAACC,GAAG,EAAEC,EAAE,EAAEC,QAAQ,EAAE;EACzC,MAAMC,GAAG,GAAGH,GAAG,CAACI,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACJ,EAAE,KAAKA,EAAE,CAAC;EAE/C,MAAMK,OAAO,GAAGN,GAAG,CAACG,GAAG,CAAC;EACxB,IAAII,IAAI;EACR,IAAIC,IAAI,GAAG,MAAM;EAEjB,IAAIF,OAAO,CAACG,SAAS,KAAK,MAAM,IAAIH,OAAO,CAACI,SAAS,KAAK,KAAK,EAAEF,IAAI,GAAG,SAAS;EAEjF,IAAIF,OAAO,CAACG,SAAS,KAAK,WAAW,IAAIH,OAAO,CAACI,SAAS,KAAK,IAAI,IAAIR,QAAQ,KAAK,SAAS,EAAE;IAC7FM,IAAI,GAAG,SAAS;IAChBD,IAAI,GAAG,IAAI;EACb;EAEA,IACGD,OAAO,CAACG,SAAS,KAAK,MAAM,IAAIH,OAAO,CAACI,SAAS,KAAK,KAAK,IAAIR,QAAQ,KAAK,WAAW,IACvFI,OAAO,CAACG,SAAS,KAAK,SAAS,IAAIH,OAAO,CAACI,SAAS,KAAK,IAAK,EAC/D;IACAF,IAAI,GAAG,WAAW;IAClBD,IAAI,GAAG,IAAI;EACb;EAEA,MAAMI,OAAO,GAAG;IACd,GAAGL,OAAO;IACVG,SAAS,EAAED,IAAI;IACfE,SAAS,EAAEH,IAAI,IAAI;EACrB,CAAC;EAED,OAAO,CAAC,GAAGP,GAAG,CAACY,KAAK,CAAC,CAAC,EAAET,GAAG,CAAC,EAAEQ,OAAO,EAAE,GAAGX,GAAG,CAACY,KAAK,CAACT,GAAG,GAAG,CAAC,CAAC,CAAC;AAC/D;AAEA,SAASU,uBAAuBA,CAACC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EAC3D,OAAOF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAChC,MAAMC,OAAO,GAAG;MAAE,GAAGJ,QAAQ,CAACG,KAAK;IAAE,CAAC;IACtCC,OAAO,CAACC,UAAU,GAAG,IAAI;IAEzB,IAAID,OAAO,CAACX,SAAS,KAAKM,SAAS,EAAE;MACnCK,OAAO,CAACC,UAAU,GAAG,QAAQ;IAC/B;IACA,OAAOD,OAAO;EAChB,CAAC,CAAC;AACJ;AAEA,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACP,QAAQ,EAAEQ,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM+B,gBAAgB,GAAGA,CAACxB,EAAE,EAAEyB,KAAK,KAAK;IACtCF,WAAW,CAAEG,IAAI,IAAK;MACpB,MAAMxB,GAAG,GAAGwB,IAAI,CAACvB,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAEhD,MAAMmB,OAAO,GAAG;QAAE,GAAGO,IAAI,CAACxB,GAAG;MAAE,CAAC;MAEhCiB,OAAO,CAACQ,OAAO,GAAGF,KAAK;MAEvB,MAAMG,QAAQ,GAAG,CAAC,GAAGF,IAAI,CAACf,KAAK,CAAC,CAAC,EAAET,GAAG,CAAC,EAAEiB,OAAO,EAAE,GAAGO,IAAI,CAACf,KAAK,CAACT,GAAG,GAAG,CAAC,CAAC,CAAC;MAEzE,OAAO0B,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,UAAU,GAAIf,SAAS,IAAK;IAChC,IAAIc,QAAQ,GAAGb,QAAQ,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC3C,MAAMC,OAAO,GAAG;QAAE,GAAGJ,QAAQ,CAACG,KAAK;MAAE,CAAC;MACtCC,OAAO,CAACC,UAAU,GAAG,IAAI;MACzB,OAAOD,OAAO;IAChB,CAAC,CAAC;IAEF,IAAIL,SAAS,KAAK,QAAQ,EAAE;MAC1Bc,QAAQ,GAAGhB,uBAAuB,CAACgB,QAAQ,EAAE,WAAW,EAAEb,QAAQ,CAAC;IACrE,CAAC,MAAM,IAAID,SAAS,KAAK,WAAW,EAAE;MACpCc,QAAQ,GAAGhB,uBAAuB,CAACgB,QAAQ,EAAE,MAAM,EAAEb,QAAQ,CAAC;IAChE;IAEAQ,WAAW,CAACK,QAAQ,CAAC;EACvB,CAAC;EAED,MAAME,eAAe,GAAI9B,EAAE,IAAK;IAC9B6B,UAAU,CAAC,KAAK,CAAC;IAEjBL,gBAAgB,CAACxB,EAAE,EAAE,KAAK,CAAC;IAC3BuB,WAAW,CAAEG,IAAI,IAAK;MACpB,MAAME,QAAQ,GAAG9B,cAAc,CAAC4B,IAAI,EAAE1B,EAAE,EAAE,WAAW,CAAC;MAEtD,OAAO4B,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,aAAa,GAAI/B,EAAE,IAAK;IAC5BuB,WAAW,CAAEG,IAAI,IAAK;MACpB,MAAME,QAAQ,GAAG9B,cAAc,CAAC4B,IAAI,EAAE1B,EAAE,EAAE,SAAS,CAAC;MAEpD,OAAO4B,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,WAAW,GAAGA,CAAChC,EAAE,EAAEiC,IAAI,KAAK;IAChCV,WAAW,CAAEG,IAAI,IAAK;MACpB,MAAMxB,GAAG,GAAGwB,IAAI,CAACvB,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAEhD,MAAMK,OAAO,GAAGqB,IAAI,CAACxB,GAAG,CAAC;MACzBG,OAAO,CAAC6B,KAAK,GAAGD,IAAI;MAEpB,MAAML,QAAQ,GAAG,CAAC,GAAGF,IAAI,CAACf,KAAK,CAAC,CAAC,EAAET,GAAG,CAAC,EAAEG,OAAO,EAAE,GAAGqB,IAAI,CAACf,KAAK,CAACT,GAAG,GAAG,CAAC,CAAC,CAAC;MAEzE,OAAO0B,QAAQ;IACjB,CAAC,CAAC;IAEFG,aAAa,CAAC/B,EAAE,CAAC;EACnB,CAAC;EAED,MAAMmC,UAAU,GAAInC,EAAE,IAAK;IACzBwB,gBAAgB,CAACxB,EAAE,EAAE,KAAK,CAAC;IAC3BuB,WAAW,CAAEG,IAAI,IAAK;MACpB,MAAME,QAAQ,GAAGF,IAAI,CAACU,MAAM,CAAEhC,EAAE,IAAKA,EAAE,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAClD,OAAO4B,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7BC,WAAW,CAAC,MAAM;MAChBf,WAAW,CAAEG,IAAI,IAAK;QACpB,MAAME,QAAQ,GAAGF,IAAI,CAACV,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UACzC,MAAMC,OAAO,GAAG;YAAE,GAAGO,IAAI,CAACR,KAAK;UAAE,CAAC;UAElCC,OAAO,CAACoB,YAAY,GAAGhD,mBAAmB,CAAC4B,OAAO,CAACqB,UAAU,EAAE;YAC7DC,cAAc,EAAE,IAAI;YACpBC,SAAS,EAAE;UACb,CAAC,CAAC;UACF,OAAOvB,OAAO;QAChB,CAAC,CAAC;QAEF,OAAOS,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMe,cAAc,GAAGA,CAACT,KAAK,EAAEU,SAAS,MAAM;IAC5CV,KAAK;IACLU,SAAS;IACTjB,OAAO,EAAE,IAAI;IACbnB,SAAS,EAAE,MAAM;IACjBY,UAAU,EAAE,IAAI;IAChBX,SAAS,EAAE,KAAK;IAChBT,EAAE,EAAEL,MAAM,EAAE;IACZ6C,UAAU,EAAEK,IAAI,CAACC,GAAG,EAAE;IACtBP,YAAY,EAAEF,gBAAgB;EAChC,CAAC,CAAC;EAEF,MAAMU,eAAe,GAAI/C,EAAE,IAAK;IAC9B,MAAMgD,KAAK,GAAGV,WAAW,CAAC,MAAM;MAC9Bf,WAAW,CAAEG,IAAI,IAAK;QACpB,MAAMxB,GAAG,GAAGwB,IAAI,CAACvB,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACJ,EAAE,KAAKA,EAAE,CAAC;QAEhD,MAAMmB,OAAO,GAAG;UAAE,GAAGO,IAAI,CAACxB,GAAG;QAAE,CAAC;QAChC,IAAIiB,OAAO,CAACyB,SAAS,EAAE;UACrBzB,OAAO,CAACyB,SAAS,IAAI,CAAC;UAEtB,MAAMhB,QAAQ,GAAG,CAAC,GAAGF,IAAI,CAACf,KAAK,CAAC,CAAC,EAAET,GAAG,CAAC,EAAEiB,OAAO,EAAE,GAAGO,IAAI,CAACf,KAAK,CAACT,GAAG,GAAG,CAAC,CAAC,CAAC;UAEzE,IAAI,CAACiB,OAAO,CAACQ,OAAO,EAAE;YACpBsB,aAAa,CAACD,KAAK,CAAC;UACtB;UACA,OAAOpB,QAAQ;QACjB;QACAqB,aAAa,CAACD,KAAK,CAAC;QACpB,OAAOtB,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMwB,OAAO,GAAGA,CAACjB,IAAI,EAAEW,SAAS,KAAK;IACnCf,UAAU,CAAC,KAAK,CAAC;IAEjB,MAAMnB,OAAO,GAAGiC,cAAc,CAACV,IAAI,EAAEW,SAAS,CAAC;IAC/CrB,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEhB,OAAO,CAAC,CAAC;IACzCqC,eAAe,CAACrC,OAAO,CAACV,EAAE,CAAC;EAC7B,CAAC;EAED,MAAMmD,mBAAmB,GAAGA,CAAA,KAAM;IAChCpC,QAAQ,CAACqC,OAAO,CAAEhD,EAAE,IAAK;MACvB,IAAIA,EAAE,CAACI,SAAS,KAAK,WAAW,EAAE;QAChC2B,UAAU,CAAC/B,EAAE,CAACJ,EAAE,CAAC;MACnB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMqD,SAAS,GAAIrD,EAAE,IAAK;IACxBwB,gBAAgB,CAACxB,EAAE,EAAE,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMsD,UAAU,GAAItD,EAAE,IAAK;IACzBwB,gBAAgB,CAACxB,EAAE,EAAE,IAAI,CAAC;IAC1B+C,eAAe,CAAC/C,EAAE,CAAC;EACrB,CAAC;EAED,MAAMuD,UAAU,GAAGxC,QAAQ,CAACyC,MAAM,GAAGzC,QAAQ,CAACqB,MAAM,CAAEhC,EAAE,IAAKA,EAAE,CAACK,SAAS,KAAK,IAAI,CAAC,CAAC+C,MAAM;EAC1F,oBACE3D,OAAA;IAAS4D,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACvB7D,OAAA;MAAQ4D,SAAS,EAAC,QAAQ;MAACzD,EAAE,EAAC,QAAQ;MAAA0D,QAAA,gBACpC7D,OAAA;QAAA6D,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvBjE,OAAA,CAACP,WAAW;QAAC4D,OAAO,EAAEA;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B,eACTjE,OAAA,CAACT,QAAQ;MACP2E,IAAI,EAAEhD,QAAS;MACfiD,WAAW,EAAE7B,UAAW;MACxBe,OAAO,EAAEA,OAAQ;MACjBpB,eAAe,EAAEA,eAAgB;MACjCC,aAAa,EAAEA,aAAc;MAC7BC,WAAW,EAAEA,WAAY;MACzBqB,SAAS,EAAEA,SAAU;MACrBC,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,eACFjE,OAAA,CAACR,MAAM;MAACkE,UAAU,EAAEA,UAAW;MAACJ,mBAAmB,EAAEA,mBAAoB;MAACtB,UAAU,EAAEA;IAAW;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5F;AAEd;AAACxC,EAAA,CA5KQD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AA8KZ,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}