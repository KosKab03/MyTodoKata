{"ast":null,"code":"var _jsxFileName = \"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Footer/Footer.jsx\";\nimport TaskFilter from '../TaskFilter';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasksFilter = [{\n  label: 'All',\n  id: 'TF1',\n  noted: 'selected'\n}, {\n  label: 'Active',\n  id: 'TF2',\n  noted: null\n}, {\n  label: 'Completed',\n  id: 'TF3',\n  noted: null\n}];\nfunction createElementsFooter(hiddenTask) {\n  return tasksFilter.map(item => {\n    const {\n      id\n    } = item;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(TaskFilter, {\n        infoItem: item,\n        hiddenTask: hiddenTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n}\nfunction Footer(_ref) {\n  let {\n    countTasks,\n    clearCompletedTasks,\n    hiddenTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"footer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo-count\",\n      children: [countTasks, \" items left\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters\",\n      children: createElementsFooter(hiddenTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"clear-completed\",\n        onClick: clearCompletedTasks,\n        title: \"clear completed task\",\n        \"aria-label\": \"clear completed task\",\n        children: \"Clear completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Footer;\nFooter.defaultProps = {\n  clearCompletedTasks: () => {},\n  hiddenTask: () => {}\n};\nFooter.propTypes = {\n  clearCompletedTasks: PropTypes.func,\n  hiddenTask: PropTypes.func\n};\nexport default Footer;\nvar _c;\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["TaskFilter","React","PropTypes","jsxDEV","_jsxDEV","tasksFilter","label","id","noted","createElementsFooter","hiddenTask","map","item","children","infoItem","fileName","_jsxFileName","lineNumber","columnNumber","Footer","_ref","countTasks","clearCompletedTasks","className","type","onClick","title","_c","defaultProps","propTypes","func","$RefreshReg$"],"sources":["/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/Footer/Footer.jsx"],"sourcesContent":["import TaskFilter from '../TaskFilter';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst tasksFilter = [\n  { label: 'All', id: 'TF1', noted: 'selected' },\n  { label: 'Active', id: 'TF2', noted: null },\n  { label: 'Completed', id: 'TF3', noted: null },\n];\n\nfunction createElementsFooter(hiddenTask) {\n  return tasksFilter.map((item) => {\n    const { id } = item;\n\n    return (\n      <li key={id}>\n        <TaskFilter infoItem={item} hiddenTask={hiddenTask} />\n      </li>\n    );\n  });\n}\n\nfunction Footer({ countTasks, clearCompletedTasks, hiddenTask }) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{countTasks} items left</span>\n      <ul className=\"filters\">{createElementsFooter(hiddenTask)}</ul>\n      <label>\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={clearCompletedTasks}\n          title=\"clear completed task\"\n          aria-label=\"clear completed task\"\n        >\n          Clear completed\n        </button>\n      </label>\n    </footer>\n  );\n}\n\nFooter.defaultProps = {\n  clearCompletedTasks: () => {},\n  hiddenTask: () => {},\n};\n\nFooter.propTypes = {\n  clearCompletedTasks: PropTypes.func,\n  hiddenTask: PropTypes.func,\n};\n\nexport default Footer;\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAG,CAClB;EAAEC,KAAK,EAAE,KAAK;EAAEC,EAAE,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAW,CAAC,EAC9C;EAAEF,KAAK,EAAE,QAAQ;EAAEC,EAAE,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAK,CAAC,EAC3C;EAAEF,KAAK,EAAE,WAAW;EAAEC,EAAE,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAK,CAAC,CAC/C;AAED,SAASC,oBAAoBA,CAACC,UAAU,EAAE;EACxC,OAAOL,WAAW,CAACM,GAAG,CAAEC,IAAI,IAAK;IAC/B,MAAM;MAAEL;IAAG,CAAC,GAAGK,IAAI;IAEnB,oBACER,OAAA;MAAAS,QAAA,eACET,OAAA,CAACJ,UAAU;QAACc,QAAQ,EAAEF,IAAK;QAACF,UAAU,EAAEA;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG,GAD/CX,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEN;EAET,CAAC,CAAC;AACJ;AAEA,SAASC,MAAMA,CAAAC,IAAA,EAAkD;EAAA,IAAjD;IAAEC,UAAU;IAAEC,mBAAmB;IAAEZ;EAAW,CAAC,GAAAU,IAAA;EAC7D,oBACEhB,OAAA;IAAQmB,SAAS,EAAC,QAAQ;IAAAV,QAAA,gBACxBT,OAAA;MAAMmB,SAAS,EAAC,YAAY;MAAAV,QAAA,GAAEQ,UAAU,EAAC,aAAW;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC3Dd,OAAA;MAAImB,SAAS,EAAC,SAAS;MAAAV,QAAA,EAAEJ,oBAAoB,CAACC,UAAU;IAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/Dd,OAAA;MAAAS,QAAA,eACET,OAAA;QACEoB,IAAI,EAAC,QAAQ;QACbD,SAAS,EAAC,iBAAiB;QAC3BE,OAAO,EAAEH,mBAAoB;QAC7BI,KAAK,EAAC,sBAAsB;QAC5B,cAAW,sBAAsB;QAAAb,QAAA,EAClC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEb;AAACS,EAAA,GAlBQR,MAAM;AAoBfA,MAAM,CAACS,YAAY,GAAG;EACpBN,mBAAmB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAC7BZ,UAAU,EAAEA,CAAA,KAAM,CAAC;AACrB,CAAC;AAEDS,MAAM,CAACU,SAAS,GAAG;EACjBP,mBAAmB,EAAEpB,SAAS,CAAC4B,IAAI;EACnCpB,UAAU,EAAER,SAAS,CAAC4B;AACxB,CAAC;AAED,eAAeX,MAAM;AAAC,IAAAQ,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}