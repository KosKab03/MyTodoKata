{"ast":null,"code":"var _jsxFileName = \"/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/NewTaskForm/NewTaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTaskForm(_ref) {\n  _s();\n  let {\n    addItem\n  } = _ref;\n  const [state, setState] = useState({\n    label: '',\n    minute: '',\n    second: ''\n  });\n  const onLabelChange = e => {\n    setState(prev => ({\n      ...prev,\n      label: e.target.value\n    }));\n  };\n  const onMinuteChange = e => {\n    const valueMinute = e.target.value;\n    if (+valueMinute || valueMinute === '') {\n      setState(prev => ({\n        ...prev,\n        minute: valueMinute\n      }));\n    }\n  };\n  const onSecondChange = e => {\n    const valueSecond = e.target.value;\n    if (+valueSecond || valueSecond === '') {\n      setState(prev => ({\n        ...prev,\n        second: valueSecond\n      }));\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      label,\n      minute,\n      second\n    } = state;\n    const timerTime = Number(minute) * 60 + Number(second);\n    if (label !== '' && label.length >= 2) {\n      addItem(label, timerTime);\n      setState({\n        label: '',\n        minute: '',\n        second: ''\n      });\n    }\n  };\n  const {\n    label,\n    minute,\n    second\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"new-todo-form\",\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"new-todo\",\n      placeholder: \"What needs to be done?\",\n      onChange: onLabelChange,\n      value: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"new-todo-form__timer\",\n      placeholder: \"Min\",\n      onChange: onMinuteChange,\n      value: minute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"new-todo-form__timer\",\n      placeholder: \"Sec\",\n      onChange: onSecondChange,\n      value: second\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        title: \"submit\",\n        \"aria-label\": \"submit\",\n        onSubmit: onSubmit,\n        label: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(NewTaskForm, \"LOWhIol7n6VKe5xiVTcYGOhaKbM=\");\n_c = NewTaskForm;\nNewTaskForm.defaultProps = {\n  addItem: () => {}\n};\nNewTaskForm.propTypes = {\n  addItem: PropTypes.func\n};\nexport default NewTaskForm;\nvar _c;\n$RefreshReg$(_c, \"NewTaskForm\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","NewTaskForm","_ref","_s","addItem","state","setState","label","minute","second","onLabelChange","e","prev","target","value","onMinuteChange","valueMinute","onSecondChange","valueSecond","onSubmit","preventDefault","timerTime","Number","length","className","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","title","_c","defaultProps","propTypes","func","$RefreshReg$"],"sources":["/Users/parz_ion/Desktop/code/React/my-new-todo/src/components/NewTaskForm/NewTaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction NewTaskForm({ addItem }) {\n  const [state, setState] = useState({\n    label: '',\n    minute: '',\n    second: '',\n  });\n\n  const onLabelChange = (e) => {\n    setState((prev) => ({ ...prev, label: e.target.value }));\n  };\n\n  const onMinuteChange = (e) => {\n    const valueMinute = e.target.value;\n    if (+valueMinute || valueMinute === '') {\n      setState((prev) => ({ ...prev, minute: valueMinute }));\n    }\n  };\n\n  const onSecondChange = (e) => {\n    const valueSecond = e.target.value;\n    if (+valueSecond || valueSecond === '') {\n      setState((prev) => ({ ...prev, second: valueSecond }));\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { label, minute, second } = state;\n    const timerTime = Number(minute) * 60 + Number(second);\n\n    if (label !== '' && label.length >= 2) {\n      addItem(label, timerTime);\n      setState({\n        label: '',\n        minute: '',\n        second: '',\n      });\n    }\n  };\n\n  const { label, minute, second } = state;\n  return (\n    <form className=\"new-todo-form\" onSubmit={onSubmit}>\n      <input className=\"new-todo\" placeholder=\"What needs to be done?\" onChange={onLabelChange} value={label} />\n      <input className=\"new-todo-form__timer\" placeholder=\"Min\" onChange={onMinuteChange} value={minute} />\n      <input className=\"new-todo-form__timer\" placeholder=\"Sec\" onChange={onSecondChange} value={second} />\n      <label>\n        <button type=\"submit\" title=\"submit\" aria-label=\"submit\" onSubmit={onSubmit} label=\" \" />\n      </label>\n    </form>\n  );\n}\n\nNewTaskForm.defaultProps = {\n  addItem: () => {},\n};\n\nNewTaskForm.propTypes = {\n  addItem: PropTypes.func,\n};\n\nexport default NewTaskForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}